// @author XNDev

package view;

import controller.ProjectController;
import controller.TaskController;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Project;
import model.Task;
import util.ButtonColumnCellRenderer;
import util.DeadlineColumnCellRenderer;
import util.TaskTableModel;

public class MainScreen extends javax.swing.JFrame {

    //Responsavel pela criacao da parte visual
    DefaultListModel projectsModel;
    TaskTableModel tasksModel;

    ProjectController projectController;
    TaskController taskController;

    public MainScreen() {
        initComponents();
        
        initDataController();
        initComponentsModel();
        
        decorateTableTasks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    //<editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneTasks = new javax.swing.JScrollPane();
        jTableTasks = new javax.swing.JTable();
        ToolBar = new javax.swing.JPanel();
        ToolBarTitle = new javax.swing.JLabel();
        ToolBarSubtitle = new javax.swing.JLabel();
        Projects = new javax.swing.JPanel();
        ProjectsTitle = new javax.swing.JLabel();
        ProjectsAdd = new javax.swing.JButton();
        Tasks = new javax.swing.JPanel();
        TasksTitle = new javax.swing.JLabel();
        TasksAdd = new javax.swing.JButton();
        ProjectList = new javax.swing.JPanel();
        ScrollPaneProjects = new javax.swing.JScrollPane();
        jProjectsList = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        EmptyList = new javax.swing.JPanel();
        EmptyListTitle = new javax.swing.JLabel();
        EmptyListSubtitle = new javax.swing.JLabel();
        EmptyListIcon = new javax.swing.JLabel();

        jScrollPaneTasks.setBackground(java.awt.Color.white);
        jScrollPaneTasks.setForeground(java.awt.Color.black);

        jTableTasks.setBackground(java.awt.Color.white);
        jTableTasks.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableTasks.setForeground(java.awt.Color.black);
        jTableTasks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Descricao", "Prazo", "Tarefa Conclu�da"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTasks.setGridColor(java.awt.Color.white);
        jTableTasks.setRowHeight(40);
        jTableTasks.setSelectionBackground(new java.awt.Color(51, 204, 0));
        jTableTasks.setSelectionForeground(java.awt.Color.black);
        jTableTasks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableTasks.setShowHorizontalLines(true);
        jTableTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTasksMouseClicked(evt);
            }
        });
        jScrollPaneTasks.setViewportView(jTableTasks);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(777, 554));

        ToolBar.setBackground(new java.awt.Color(51, 0, 51));
        ToolBar.setForeground(new java.awt.Color(255, 255, 255));
        ToolBar.setFocusCycleRoot(true);
        ToolBar.setFocusTraversalPolicyProvider(true);

        ToolBarTitle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        ToolBarTitle.setForeground(new java.awt.Color(51, 204, 0));
        ToolBarTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-done-42.png"))); // NOI18N
        ToolBarTitle.setText("  Todo App");

        ToolBarSubtitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ToolBarSubtitle.setForeground(new java.awt.Color(51, 204, 0));
        ToolBarSubtitle.setText("Anote tudo n�o esque�a de nada");

        javax.swing.GroupLayout ToolBarLayout = new javax.swing.GroupLayout(ToolBar);
        ToolBar.setLayout(ToolBarLayout);
        ToolBarLayout.setHorizontalGroup(
            ToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ToolBarLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(ToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ToolBarSubtitle)
                    .addComponent(ToolBarTitle))
                .addContainerGap(538, Short.MAX_VALUE))
        );
        ToolBarLayout.setVerticalGroup(
            ToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ToolBarLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(ToolBarTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ToolBarSubtitle)
                .addGap(11, 11, 11))
        );

        Projects.setBackground(new java.awt.Color(255, 255, 255));
        Projects.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ProjectsTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ProjectsTitle.setForeground(new java.awt.Color(51, 204, 0));
        ProjectsTitle.setText("Projetos");

        ProjectsAdd.setBackground(java.awt.Color.white);
        ProjectsAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-button.png"))); // NOI18N
        ProjectsAdd.setBorder(null);
        ProjectsAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProjectsAddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout ProjectsLayout = new javax.swing.GroupLayout(Projects);
        Projects.setLayout(ProjectsLayout);
        ProjectsLayout.setHorizontalGroup(
            ProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProjectsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ProjectsAdd)
                .addGap(14, 14, 14))
        );
        ProjectsLayout.setVerticalGroup(
            ProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProjectsLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(ProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ProjectsAdd)
                    .addComponent(ProjectsTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );

        Tasks.setBackground(new java.awt.Color(255, 255, 255));
        Tasks.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        TasksTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TasksTitle.setForeground(new java.awt.Color(51, 204, 0));
        TasksTitle.setText("Tarefas");

        TasksAdd.setBackground(java.awt.Color.white);
        TasksAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-button.png"))); // NOI18N
        TasksAdd.setToolTipText("");
        TasksAdd.setBorder(null);
        TasksAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TasksAddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout TasksLayout = new javax.swing.GroupLayout(Tasks);
        Tasks.setLayout(TasksLayout);
        TasksLayout.setHorizontalGroup(
            TasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TasksLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(TasksTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TasksAdd)
                .addGap(20, 20, 20))
        );
        TasksLayout.setVerticalGroup(
            TasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TasksLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TasksAdd)
                    .addComponent(TasksTitle))
                .addGap(16, 16, 16))
        );

        ProjectList.setBackground(new java.awt.Color(255, 255, 255));
        ProjectList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ProjectList.setFocusTraversalPolicyProvider(true);

        ScrollPaneProjects.setToolTipText("");

        jProjectsList.setBackground(java.awt.Color.white);
        jProjectsList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jProjectsList.setForeground(java.awt.Color.black);
        jProjectsList.setFixedCellHeight(30);
        jProjectsList.setPreferredSize(new java.awt.Dimension(258, 242));
        jProjectsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jProjectsListMouseClicked(evt);
            }
        });
        ScrollPaneProjects.setViewportView(jProjectsList);

        javax.swing.GroupLayout ProjectListLayout = new javax.swing.GroupLayout(ProjectList);
        ProjectList.setLayout(ProjectListLayout);
        ProjectListLayout.setHorizontalGroup(
            ProjectListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProjectListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPaneProjects, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addContainerGap())
        );
        ProjectListLayout.setVerticalGroup(
            ProjectListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPaneProjects)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setForeground(java.awt.Color.black);
        jPanel5.setLayout(new java.awt.BorderLayout());

        EmptyList.setBackground(java.awt.Color.white);
        EmptyList.setForeground(java.awt.Color.black);

        EmptyListTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        EmptyListTitle.setForeground(new java.awt.Color(51, 204, 0));
        EmptyListTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmptyListTitle.setText("Nenhuma tarefa por aqui :D");

        EmptyListSubtitle.setForeground(new java.awt.Color(153, 153, 153));
        EmptyListSubtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmptyListSubtitle.setText("Clique no bot�o \"+\" para adicionar alguma tarefa");

        EmptyListIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmptyListIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/list.png"))); // NOI18N

        javax.swing.GroupLayout EmptyListLayout = new javax.swing.GroupLayout(EmptyList);
        EmptyList.setLayout(EmptyListLayout);
        EmptyListLayout.setHorizontalGroup(
            EmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmptyListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EmptyListTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EmptyListSubtitle, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                    .addComponent(EmptyListIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        EmptyListLayout.setVerticalGroup(
            EmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmptyListLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(EmptyListIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmptyListTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmptyListSubtitle)
                .addGap(140, 140, 140))
        );

        jPanel5.add(EmptyList, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Projects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProjectList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Tasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Projects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Tasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProjectList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    } // </editor-fold>GEN-END:initComponents

    private void TasksAddMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_TasksAddMouseClicked
        // TODO add your handling code here:
         TaskDialogScreen taskDialogScreen = new TaskDialogScreen(this, rootPaneCheckingEnabled);

        int projectIndex = jProjectsList.getSelectedIndex();
        if (projectIndex != -1) {
            
           
            Project project = (Project) projectsModel.get(jProjectsList.getSelectedIndex());
            taskDialogScreen.setProject(project);
            taskDialogScreen.setVisible(true);
            taskDialogScreen.addWindowListener(new WindowAdapter() {
                
            //Atualiza a lista depois que a janela fecha (dps de salvo) 
                public void windowClosed(WindowEvent e) {
                    int projectIndex = jProjectsList.getSelectedIndex();
                    Project project = (Project) projectsModel.get(projectIndex);
                    loadTasks(project.getId());
                }
            });
        } else {
            JOptionPane.showMessageDialog(rootPane, "Voce deve escolher um projeto para essa tarefa", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_TasksAddMouseClicked

    private void ProjectsAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProjectsAddMouseClicked
        // TODO add your handling code here:
        ProjectDialogScreen projectDialogScreen = new ProjectDialogScreen(this, true);
        projectDialogScreen.setVisible(true);

        //adiciona um listener para avisar quando a janela for fechada e executar o codigo dentro (loadproject)e atualiza o projeto
        projectDialogScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                loadProjects();
            }
        });
    }//GEN-LAST:event_ProjectsAddMouseClicked

    private void jTableTasksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTasksMouseClicked
        //descobre qual a linha e qual a coluna do clique
        int rowIndex = jTableTasks.rowAtPoint(evt.getPoint());
        int columnIndex = jTableTasks.columnAtPoint(evt.getPoint());
        //Pega a tarefa do tablemodel e busca com base na linha que foi clicada
        Task task = tasksModel.getTasks().get(rowIndex);

        switch (columnIndex) {
            case 3:
                taskController.update(task);  //metodo "save" faz insert no banco de dados
                break;
            case 4:
                JOptionPane.showMessageDialog(rootPane, "Editar a tarefa");
                break;
            case 5:
                taskController.removeById(task.getId());
                tasksModel.getTasks().remove(task);
               
            //atualiza a lista sem a tarefa excluida
                int projectIndex = jProjectsList.getSelectedIndex();
                Project project = (Project) projectsModel.get(projectIndex);
                loadTasks(project.getId());
                break;
        }
    }//GEN-LAST:event_jTableTasksMouseClicked

    private void jProjectsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProjectsListMouseClicked
        // TODO add your handling code here:
        int projectIndex = jProjectsList.getSelectedIndex();
        Project project = (Project) projectsModel.get(projectIndex);
        loadTasks(project.getId());
    }//GEN-LAST:event_jProjectsListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainScreen().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EmptyList;
    private javax.swing.JLabel EmptyListIcon;
    private javax.swing.JLabel EmptyListSubtitle;
    private javax.swing.JLabel EmptyListTitle;
    private javax.swing.JPanel ProjectList;
    private javax.swing.JPanel Projects;
    private javax.swing.JButton ProjectsAdd;
    private javax.swing.JLabel ProjectsTitle;
    private javax.swing.JScrollPane ScrollPaneProjects;
    private javax.swing.JPanel Tasks;
    private javax.swing.JButton TasksAdd;
    private javax.swing.JLabel TasksTitle;
    private javax.swing.JPanel ToolBar;
    private javax.swing.JLabel ToolBarSubtitle;
    private javax.swing.JLabel ToolBarTitle;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JList<String> jProjectsList;
    private javax.swing.JScrollPane jScrollPaneTasks;
    private javax.swing.JTable jTableTasks;
    // End of variables declaration//GEN-END:variables

    public void decorateTableTasks() {
        //customizando o header da table de tarefas
        jTableTasks.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        jTableTasks.getTableHeader().setBackground(new Color(51, 0, 51));
        jTableTasks.getTableHeader().setForeground(new Color(51, 204, 0));
        jTableTasks.getTableHeader().setOpaque(false);
        
        //utiliza a customiza��o ao inves da padroniza��o default
        jTableTasks.getColumnModel().getColumn(2).setCellRenderer(new DeadlineColumnCellRenderer());
        
        //adiciona botao de excluir e editar
        jTableTasks.getColumnModel().getColumn(4).setCellRenderer(new ButtonColumnCellRenderer("edit"));
        jTableTasks.getColumnModel().getColumn(5).setCellRenderer(new ButtonColumnCellRenderer("delete"));

        jTableTasks.setAutoCreateRowSorter(true);//cria uma ordena��o automatica por coluna

        jTableTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int rowIndex = jTableTasks.rowAtPoint(evt.getPoint());
                int columnIndex = jTableTasks.columnAtPoint(evt.getPoint());

                if (columnIndex == 3) {
                    Task task = tasksModel.getTasks().get(rowIndex);
                    taskController.update(task);
                }
            }
        });
    }

    public void initDataController() {
        projectController = new ProjectController();
        taskController = new TaskController();
    }

    private void initComponentsModel() {
        projectsModel = new DefaultListModel();
        loadProjects();

        tasksModel = new TaskTableModel();
        jTableTasks.setModel(tasksModel);

        //for�a a sele��o do primeiro projeto
        if (!projectsModel.isEmpty()) {
            jProjectsList.setSelectedIndex(0);
            Project project = (Project) projectsModel.get(0);
            loadTasks(project.getId());

        }
    }

    public void loadTasks(int idProject) {
        List<Task> tasks = taskController.getAll(idProject);
        tasksModel.setTasks(tasks);
        showJTableTasks(!tasks.isEmpty());
    }

    //Troca as telas entre emptylist(sem tarefas) para mostrar tarefas(caso haja)
    private void showJTableTasks(boolean isEmptyTable) {
        if (isEmptyTable) {
            if (EmptyList.isVisible()) {
                EmptyList.setVisible(false);
                jPanel5.remove(EmptyList);
            }
            jPanel5.add(jScrollPaneTasks);
            jScrollPaneTasks.setVisible(true);
            jScrollPaneTasks.setSize(jPanel5.getWidth(), jPanel5.getHeight());
        } else {
            if (jScrollPaneTasks.isVisible()) {
                jScrollPaneTasks.setVisible(false);
                jPanel5.remove(jScrollPaneTasks);
            }
            jPanel5.add(EmptyList);
            EmptyList.setVisible(true);
            EmptyList.setSize(jPanel5.getWidth(), jPanel5.getHeight());
        }
    }

    //Guarda as informacoes dos projetos do banco e descreve no model
    public void loadProjects() {

        //Carregando projetos para a lista de projetos
        List<Project> projects = projectController.getAll();

        //Remove dados da lista
        projectsModel.clear();

        //Reinicializa a lista
        for (int i = 0; i < projects.size(); i++) {
            projectsModel.addElement(projects.get(i));
        }

        //Componente grafico padrao jlist altera o model para trabalhar com o model definido acima
        jProjectsList.setModel(projectsModel);
    }

}
